microbenchmark(sort(x))
microbenchmark(burbuja(x))
microbenchmark(
sort(x),
burbuja(x)
)
mbm=microbenchmark(
resburbuja,
respsort)
mbm=microbenchmark(
resburbuja,respsort)
mbm=microbenchmark(
resburbuja,respsort)
mbm=microbenchmark(
resburbuja,respsort)
mbm
mbm<-microbenchmark(
resburbuja,respsort)
mbm<-microbenchmark(
resburbuja,respsort)
mbm
autoplot(mbm)
x<-sample(1:20000,10)
plot(x)
burbuja <- function(x){
n<-length(x)
for(j in 1:(n-1)){
for(i in 1:(n-j)){
if(x[i]>x[i+1]){
temp<-x[i]
x[i]<-x[i+1]
x[i+1]<-temp
}
}
}
return(x)
}
#Muestra obtenida
resBurbuja<-burbuja(x)
#Muestra Ordenada
x<-sample(1:20000,10)
sort(x)
respSort<-sort(x)
microbenchmark(sort(x))
microbenchmark(burbuja(x))
microbenchmark(
sort(x),
burbuja(x)
)
mbm<-microbenchmark(
resburBuja,respSort)
mbm
mbm<-microbenchmark(
resBuruja,respSort)
mbm<-microbenchmark(
resBurbuja,respSort)
mbm
#Mostrar resultado de mbm
autoplot(mbm)
# Se debe señalar que el resultado varía todas las veces que se
#realiza, ya que depende de si hay otras ventanas abiertas y de
#la capacidad del procesador que se posea.
mbm<-microbenchmark(
resBurbuja,respSort)
mbm
#Mostrar resultado de mbm
autoplot(mbm)
mbm2<-microbenchmark(
respSort,
resBurbuja)
mbm2
mbm1<-microbenchmark(
resBurbuja,respSort)
mbm1<-microbenchmark(
resBurbuja,respSort)
mbm1
mbm2<-microbenchmark(
respSort,
resBurbuja)
mbm2
#COVID 19
library(readr)
casos_A <- read_delim("C:/Users/YES/Desktop/casos.csv", ";",
escape_double = FALSE, trim_ws = TRUE, skip = 1)
> View(casos_A)
> summary(casos_A)
m <- length(casos_A$Casos)
install.packages("tidyverse")
install.packages("tidyverse")
library(rlang)
library(viridisLite)
library(ggplot2)
library(scales)
# Set so that long lines in R will be wrapped:
# opts_chunk$set(tidy.opts=list(width.cutoff=80),tidy=TRUE)
ggplot() + geom_polygon(data = world, aes(x = long, y = lat,
group = group), fill = "grey", alpha = 0.3) + geom_point(data = datacov,
aes(x = Long, y = Lat, size = `3/3/20`, color = `3/3/20`),
stroke = F, alpha = 0.7) + scale_size_continuous(name = "Cases",
trans = "log", range = c(1, 7), breaks = mybreaks, labels = c("1-19",
"20-99", "100-999", "1,000-49,999", "50,000+")) +
scale_color_viridis_c(option = "inferno", name = "Cases", trans = "log",
breaks = mybreaks, labels = c("1-19", "20-99", "100-999",
"1,000-49,999", "50,000+")) + theme_void() + guides(colour = guide_legend()) +
labs(caption = "Basado en datos oficiales Johns Hopkins CSSE. Visualization UNCuyo-Argentina ") +
theme(legend.position = "bottom", text = element_text(color = "#22211d"),
plot.background = element_rect(fill = "#ffffff", color = NA),
panel.background = element_rect(fill = "#ffffff", color = NA),
legend.background = element_rect(fill = "#ffffff", color = NA))
# Set so that long lines in R will be wrapped:
# opts_chunk$set(tidy.opts=list(width.cutoff=80),tidy=TRUE)
ggplot() + geom_polygon(data = world, aes(x = long, y = lat,
group = group), fill = "grey", alpha = 0.3) + geom_point(data = datacov,
aes(x = Long, y = Lat, size = `3/3/20`, color = `3/3/20`),
stroke = F, alpha = 0.7) + scale_size_continuous(name = "Cases",
trans = "log", range = c(1, 7), breaks = mybreaks, labels = c("1-19",
"20-99", "100-999", "1,000-49,999", "50,000+")) +
scale_color_viridis_c(option = "inferno", name = "Cases", trans = "log",
breaks = mybreaks, labels = c("1-19", "20-99", "100-999",
"1,000-49,999", "50,000+")) + theme_void() + guides(colour = guide_legend()) +
labs(caption = "Basado en datos oficiales Johns Hopkins CSSE. Visualization UNCuyo-Argentina ") +
theme(legend.position = "bottom", text = element_text(color = "#22211d"),
plot.background = element_rect(fill = "#ffffff", color = NA),
panel.background = element_rect(fill = "#ffffff", color = NA),
legend.background = element_rect(fill = "#ffffff", color = NA))
library(tidyverse)
library(tidyverse)
install.packages("tidyverse")
summary(cars)
datacov <- read_csv(https://github.com/CSSEGISandData/COVID-19/commit/d1864027a47227b5e250ba001fa65808c8287829)
datacov <- read_csv('https://github.com/CSSEGISandData/COVID-19/commit/d1864027a47227b5e250ba001fa65808c8287829')
library(readr)
library(reader)
library(reader)
datacov <- read_csv('https://github.com/CSSEGISandData/COVID-19/commit/d1864027a47227b5e250ba001fa65808c8287829')
View(datacov)
datacov <- read_csv('csse_covid_19_data/csse_covid_19_time_series/Errata.csv')
datacov <- read_csv('https://github.com/CSSEGISandData/COVID-19/commit/d1864027a47227b5e250ba001fa65808c8287829')
Parsed with column specification:
cols(
.default = col_double(),
`Province/State` = col_character(),
`Country/Region` = col_character()
)
Parsed with column specification:
cols(
.default = col_double(),
`Province/State` = col_character(),
`Country/Region` = col_character()
)
library(foreign, lib.loc = "C:/Program Files/R/R-3.6.3/library")
setwd("C:\Users\YES\Desktop\TP COVID\BD COVID")
setwd("C:/Users/YES/Desktop/TP COVID/BD COVID")
datos<-read.table("casos",sep=";header=TRUE)
datos<-read.table("casos",sep=";header=TRUE)
dias = 1
infectados = 502
while (infectados < 40000000) {
infectados = 1.62 * infectados
dias = dias + 1
}
print(dias)
#Muestra Ordenada
x<-sample(1:20000,10)
sort(x)
respSort<-sort(x)
microbenchmark(sort(x))
microbenchmark(sort(x))
microbenchmark(burbuja(x))
microbenchmark(
sort(x),
burbuja(x)
)
mbm1<-microbenchmark(
resBurbuja,respSort)
library(microbenchmark)
microbenchmark(sort(x))
microbenchmark(burbuja(x))
microbenchmark(
sort(x),
burbuja(x)
)
mbm1<-microbenchmark(
resBurbuja,respSort)
mbm1
#Mostrar resultado de mbm
autoplot(mbm1)
mbm2<-microbenchmark(
respSort,
resBurbuja)
mbm2
#Mostrar resultado de mbm
autoplot(mbm2)
datos<-read.table("casos",sep=";header=TRUE)
datos
View(datos)
View(casos)
View(casos_A)
datos<-read.table("casos_A",sep=";header=TRUE)
install.packages(c("ggplot2", "rlang"))
install.packages(c("ggplot2", "rlang"))
install.packages(c("ggplot2", "rlang"))
var(F,na.rm = TRUE)
View(casos_A)
m <- length(casos_A$Casos)
casos_A <- read_delim("C:/Users/YES/Desktop/TP COVID/BD COVID", ";",
escape_double = FALSE, trim_ws = TRUE, skip = 1)
library(reader)
library(readr)
library(foreign, lib.loc = "C:/Program Files/R/R-3.6.3/library")
casos_A <- read_delim("C:/Users/YES/Desktop/TP COVID/BD COVID", ";",
escape_double = FALSE, trim_ws = TRUE, skip = 1)
#COVID 19
library(readr)
casos_A <- read_delim("C:/Users/YES/Desktop/TP COVID/BD COVID", ";",
escape_double = FALSE, trim_ws = TRUE, skip = 1)
View(casos_A)
summary(casos_A)
m <- length(casos_A$Casos)
#COVID 19
library(readr)
casos_A <- read_delim("C:/Users/YES/Desktop/casos.csv", ";",
escape_double = FALSE, trim_ws = TRUE, skip = 1)
library(readr)
casos <- read_delim("casos.csv", ";", escape_double = FALSE,
trim_ws = TRUE, skip = 1)
View(casos)
#COVID 19
library(readr)
casos_A <- read_delim("C:/Users/YES/Desktop/TP COVID/BD COVID", ";",
escape_double = FALSE, trim_ws = TRUE, skip = 1)
View(casos_A)
#COVID 19
library(readr)
casos_A <- read_delim("C:/Users/YES/Desktop/TP COVID/BD COVID", ";",
escape_double = FALSE, trim_ws = TRUE, skip = 1)
View(casos_A)
#COVID 19
library(readr)
casos_A <- read_delim("C:/Users/YES/Desktop/casos.csv", ";",
escape_double = FALSE, trim_ws = TRUE, skip = 1)
> View(casos_A)
> summary(casos_A)
#COVID 19
library(readr)
casos_A <- read_delim("C:/Users/YES/Desktop/casos.csv", ";",
escape_double = FALSE, trim_ws = TRUE, skip = 1)
View(casos_A)
summary(casos_A)
m <- length(casos_A$Casos)
F <- (casos_A$Casos[2:m])/(casos_A$Casos[1:m-1])
mean(F,na.rm = TRUE)
sd(F,na.rm = TRUE)
var(F,na.rm = TRUE)
casos <- read.csv("C:/Users/YES/Desktop/TP COVID/BD COVID/casos.csv", sep=";")
View(casos)
#COVID 19
library(readr)
casos_1 <- read_delim("C:/Users/YES/Desktop/casos.csv", ";",
escape_double = FALSE, trim_ws = TRUE, skip = 1)
View(casos_1)
summary(casos_1)
m <- length(casos_A$Casos)
F <- (casos_1$Casos[2:m])/(casos_1$Casos[1:m-1])
mean(F,na.rm = TRUE)
sd(F,na.rm = TRUE)
var(F,na.rm = TRUE)
#COVID 19
library(readr)
casos_A <- read_delim("C:/Users/YES/Desktop/casos.csv", ";",
escape_double = FALSE, trim_ws = TRUE, skip = 1)
casos <- read.csv("C:/Users/YES/Desktop/TP COVID/BD COVID/casos.csv", sep=";")
View(casos)
#COVID 19
library(readr)
casos_A casos <- read.csv("C:/Users/YES/Desktop/TP COVID/BD COVID/casos.csv",
sep=";",escape_double = FALSE, trim_ws = TRUE, skip = 1)
library(readr)
casos <- read_delim("casos.csv", ";", escape_double = FALSE,
trim_ws = TRUE, skip = 1)
View(casos)
#COVID 19
library(readr)
casos_A <- read_delim("casos.csv", ";", escape_double = FALSE,
+     trim_ws = TRUE, skip = 1)
library(readr)
casos_A <- read_delim("casos.csv", ";", escape_double = FALSE,
trim_ws = TRUE, skip = 1)
View(casos_A)
casos_A <- read_delim("casos.csv", ";", escape_double = FALSE, trim_ws = TRUE, skip = 1)
View(casos_A)
library(readr)
time_series_covid19_confirmed_global <- read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv")
View(time_series_covid19_confirmed_global)
csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv
library(readr)
time_series_covid19_confirmed_global <- read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv")
View(time_series_covid19_confirmed_global)
head(datacov)
View(time_series_covid19_confirmed_global)
library(readr)
datacovid_Jun7_global <- read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv")
View(datacovid_Jun7_global)
time_series_covid19_confirmed_global <- read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv")
datacovid_Jun7_global[datacovid_Jun7_global$`Country/Region`=="Argentina",51]
head(datacovid_Jun7_global)
View(datacovid_Jun7_global)
datacovid_Jun7_global[datacovid_Jun7_global$`Country/Region`=="Argentina",51]
paises <- summary(factor(datacovid_Jun7_global$`Country/Region`))
head(paises)
paises <- summary(factor(datacovid_Jun7_global$`Country/Region`))
View(paises)
unique(factor(datacovid_Jun7_global$`Country/Region`))
# Calculo para el 25 de marzo
datacovid_Jun7_global[datacovid_Jun7_global$`Country/Region`=="Argentina",68]
library(ggplot2)
library(readr)
library(maps)
library(viridisLite)
install.packages("maps")
library(maps)
install.packages("tidyverse")
world <- map_data("world")
mybreaks <- c(1, 20, 100, 1000, 50000)
# Set so that long lines in R will be wrapped:
# opts_chunk$set(tidy.opts=list(width.cutoff=80),tidy=TRUE)
ggplot() + geom_polygon(data = world, aes(x = long, y = lat,
group = group), fill = "grey", alpha = 0.3) + geom_point(data = datacov,
aes(x = Long, y = Lat, size = `3/3/20`, color = `3/3/20`),
stroke = F, alpha = 0.7) + scale_size_continuous(name = "Cases",
trans = "log", range = c(1, 7), breaks = mybreaks, labels = c("1-19",
"20-99", "100-999", "1,000-49,999", "50,000+")) +
scale_color_viridis_c(option = "inferno", name = "Cases", trans = "log",
breaks = mybreaks, labels = c("1-19", "20-99", "100-999",
"1,000-49,999", "50,000+")) + theme_void() + guides(colour = guide_legend()) +
labs(caption = "Basado en datos oficiales Johns Hopkins CSSE. Visualization UNCuyo-Argentina ") +
theme(legend.position = "bottom", text = element_text(color = "#22211d"),
plot.background = element_rect(fill = "#ffffff", color = NA),
panel.background = element_rect(fill = "#ffffff", color = NA),
legend.background = element_rect(fill = "#ffffff", color = NA))
ggplot() + geom_polygon(data = world, aes(x = long, y = lat,
group = group), fill = "grey", alpha = 0.3) + geom_point(data = datacov,
aes(x = Long, y = Lat, size = `3/3/20`, color = `3/3/20`),
stroke = F, alpha = 0.7) + scale_size_continuous(name = "Cases",
trans = "log", range = c(1, 7), breaks = mybreaks, labels = c("1-19",
"20-99", "100-999", "1,000-49,999", "50,000+")) +
scale_color_viridis_c(option = "inferno", name = "Cases", trans = "log",
breaks = mybreaks, labels = c("1-19", "20-99", "100-999",
"1,000-49,999", "50,000+")) + theme_void() + guides(colour = guide_legend()) +
labs(caption = "Basado en datos oficiales Johns Hopkins CSSE. Visualization UNCuyo-Argentina ") +
theme(legend.position = "bottom", text = element_text(color = "#22211d"),
plot.background = element_rect(fill = "#ffffff", color = NA),
panel.background = element_rect(fill = "#ffffff", color = NA),
legend.background = element_rect(fill = "#ffffff", color = NA))
View(world)
ggplot() + geom_polygon(data = world, aes(x = long, y = lat,
group = group), fill = "grey", alpha = 0.3) + geom_point(data = datacov,
aes(x = long, y = lat, size = `3/3/20`, color = `3/3/20`),
stroke = F, alpha = 0.7) + scale_size_continuous(name = "Cases",
trans = "log", range = c(1, 7), breaks = mybreaks, labels = c("1-19",
"20-99", "100-999", "1,000-49,999", "50,000+")) +
scale_color_viridis_c(option = "inferno", name = "Cases", trans = "log",
breaks = mybreaks, labels = c("1-19", "20-99", "100-999",
"1,000-49,999", "50,000+")) + theme_void() + guides(colour = guide_legend()) +
labs(caption = "Basado en datos oficiales Johns Hopkins CSSE. Visualization UNCuyo-Argentina ") +
theme(legend.position = "bottom", text = element_text(color = "#22211d"),
plot.background = element_rect(fill = "#ffffff", color = NA),
panel.background = element_rect(fill = "#ffffff", color = NA),
legend.background = element_rect(fill = "#ffffff", color = NA))
ggplot()
geom_point(data = datacov,aes(x = long, y = lat, size = `3/3/20`, color = `3/3/20`),
stroke = F, alpha = 0.7) + scale_size_continuous(name = "Cases",
geom_point(data = datacov,aes(x = long, y = lat, size = `3/3/20`, color = `3/3/20`),
stroke = F, alpha = 0.7) + scale_size_continuous(name = "Cases"
geom_polygon(data = world, aes(x = long, y = lat,
group = group), fill = "grey", alpha = 0.3) + geom_point(data = datacov,
aes(x = Long, y = Lat, size = `3/3/20`, color = `3/3/20`)
geom_polygon(data = world, aes(x = long, y = lat,
group = group), fill = "grey", alpha = 0.3) + geom_point(data = datacov,
aes(x = Long, y = Lat, size = `3/3/20`, color = `3/3/20`)
geom_polygon(data = world, aes(x = long, y = lat,
group = group), fill = "grey", alpha = 0.3) + geom_point(data = datacov,
aes(x = Long, y = Lat, size = `3/3/20`, color = `3/3/20`),
ggplot() + geom_polygon(data = world, aes(x = long, y = lat,
group = group), fill = "grey", alpha = 0.3) + geom_point(data = datacov,
aes(x = Long, y = Lat, size = `3/3/20`, color = `3/3/20`),
ggplot() + geom_polygon(data = world, aes(x = long, y = lat,
group = group), fill = "grey", alpha = 0.3) + geom_point(data = datacov,
aes(x = Long, y = Lat, size = `3/3/20`, color = `3/3/20`)
ggplot() + geom_polygon(data = world, aes(x = long, y = lat,
group = group), fill = "grey", alpha = 0.3) + geom_point(data = datacov,
aes(x = Long, y = Lat, size = `3/3/20`, color = `3/3/20`),
stroke = F, alpha = 0.7) + scale_size_continuous(name = "Cases",
trans = "log", range = c(1, 7), breaks = mybreaks, labels = c("1-19",
"20-99", "100-999", "1,000-49,999", "50,000+")) +
scale_color_viridis_c(option = "inferno", name = "Cases", trans = "log",
breaks = mybreaks, labels = c("1-19", "20-99", "100-999",
"1,000-49,999", "50,000+")) + theme_void() + guides(colour = guide_legend()) +
labs(caption = "Basado en datos oficiales Johns Hopkins CSSE. Visualization UNCuyo-Argentina ") +
theme(legend.position = "bottom", text = element_text(color = "#22211d"),
plot.background = element_rect(fill = "#ffffff", color = NA),
panel.background = element_rect(fill = "#ffffff", color = NA),
legend.background = element_rect(fill = "#ffffff", color = NA))
last_error()
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
last_error()
last_error()
library(rlang)
last_error()
ggplot() + geom_polygon(data = world, aes(x = long, y = lat,
group = group), fill = "grey", alpha = 0.3) + geom_point(data = datacov,
aes(x = Long, y = Lat, size = `3/3/20`, color = `3/3/20`),
stroke = F, alpha = 0.7) + scale_size_continuous(name = "Cases",
trans = "log", range = c(1, 7), breaks = mybreaks, labels = c("1-19",
"20-99", "100-999", "1,000-49,999", "50,000+")) +
scale_color_viridis_c(option = "inferno", name = "Cases", trans = "log",
breaks = mybreaks, labels = c("1-19", "20-99", "100-999",
"1,000-49,999", "50,000+")) + theme_void() + guides(colour = guide_legend()) +
labs(caption = "Basado en datos oficiales Johns Hopkins CSSE. Visualization UNCuyo-Argentina ") +
theme(legend.position = "bottom", text = element_text(color = "#22211d"),
plot.background = element_rect(fill = "#ffffff", color = NA),
panel.background = element_rect(fill = "#ffffff", color = NA),
legend.background = element_rect(fill = "#ffffff", color = NA))
library(ggplot2)
ggplot() + geom_polygon(data = world, aes(x = long, y = lat,
group = group), fill = "grey", alpha = 0.3) + geom_point(data = datacov,
aes(x = Long, y = Lat, size = `3/3/20`, color = `3/3/20`),
stroke = F, alpha = 0.7) + scale_size_continuous(name = "Cases",
trans = "log", range = c(1, 7), breaks = mybreaks, labels = c("1-19",
"20-99", "100-999", "1,000-49,999", "50,000+")) +
scale_color_viridis_c(option = "inferno", name = "Cases", trans = "log",
breaks = mybreaks, labels = c("1-19", "20-99", "100-999",
"1,000-49,999", "50,000+")) + theme_void() + guides(colour = guide_legend()) +
labs(caption = "Basado en datos oficiales Johns Hopkins CSSE. Visualization UNCuyo-Argentina ") +
theme(legend.position = "bottom", text = element_text(color = "#22211d"),
plot.background = element_rect(fill = "#ffffff", color = NA),
panel.background = element_rect(fill = "#ffffff", color = NA),
legend.background = element_rect(fill = "#ffffff", color = NA))
ggplot() + geom_polygon(data = world, aes(x = long, y = lat,
group = group), fill = "grey", alpha = 0.3) + geom_point(data = datacov,
aes(x = long, y = lat, size = `3/3/20`, color = `3/3/20`),
stroke = F, alpha = 0.7) + scale_size_continuous(name = "Cases",
trans = "log", range = c(1, 7), breaks = mybreaks, labels = c("1-19",
"20-99", "100-999", "1,000-49,999", "50,000+")) +
scale_color_viridis_c(option = "inferno", name = "Cases", trans = "log",
breaks = mybreaks, labels = c("1-19", "20-99", "100-999",
"1,000-49,999", "50,000+")) + theme_void() + guides(colour = guide_legend()) +
labs(caption = "Basado en datos oficiales Johns Hopkins CSSE. Visualization UNCuyo-Argentina ") +
theme(legend.position = "bottom", text = element_text(color = "#22211d"),
plot.background = element_rect(fill = "#ffffff", color = NA),
panel.background = element_rect(fill = "#ffffff", color = NA),
legend.background = element_rect(fill = "#ffffff", color = NA))
> ggplot() +
+ geom_polygon(data = world, aes(x=long, y = lat, group = group), fill="grey", alpha=0.3) +
+ geom_point(data=datacov, aes(x=Long, y=Lat, size=`3/3/20`, color=`3/3/20`), stroke=F, alpha=0.7) +
+ scale_size_continuous(name="Cases", trans="log", range=c(1,7),breaks=mybreaks, labels = c("1-19", "20-99", "100-999", "1,000-49,999", "50,000+")) +
+ # scale_alpha_continuous(name="Cases", trans="log", range=c(0.1, 0.9), breaks=mybreaks) +
+ scale_color_viridis_c(option="inferno",name="Cases", trans="log",breaks=mybreaks, labels = c("1-19", "20-99", "100-999", "1,000-49,999", "50,000+")) +
+ theme_void() +
+ guides( colour = guide_legend()) +
+ labs(caption = "Data Repository provided by Johns Hopkins CSSE. Visualization by DataScience+ ") +
+ theme(
+ legend.position = "bottom",
+ text = element_text(color = "#22211d"),
+ plot.background = element_rect(fill = "#ffffff", color = NA),
+ panel.background = element_rect(fill = "#ffffff", color = NA),
+ legend.background = element_rect(fill = "#ffffff", color = NA)
+ )
> ggplot() +
+ geom_polygon(data = world, aes(x=long, y = lat, group = group), fill="grey", alpha=0.3) +
+ geom_point(data=datacov, aes(x=Long, y=Lat, size=`3/3/20`, color=`3/3/20`), stroke=F, alpha=0.7) +
+ scale_size_continuous(name="Cases", trans="log", range=c(1,7),breaks=mybreaks, labels = c("1-19", "20-99", "100-999", "1,000-49,999", "50,000+")) +
+ # scale_alpha_continuous(name="Cases", trans="log", range=c(0.1, 0.9), breaks=mybreaks) +
+ scale_color_viridis_c(option="inferno",name="Cases", trans="log",breaks=mybreaks, labels = c("1-19", "20-99", "100-999", "1,000-49,999", "50,000+")) +
+ theme_void() +
+ guides( colour = guide_legend()) +
+ labs(caption = "Data Repository provided by Johns Hopkins CSSE. Visualization by DataScience+ ") +
+ theme(
+ legend.position = "bottom",
+ text = element_text(color = "#22211d"),
+ plot.background = element_rect(fill = "#ffffff", color = NA),
+ panel.background = element_rect(fill = "#ffffff", color = NA),
+ legend.background = element_rect(fill = "#ffffff", color = NA)
+ )
labs(caption = "Data Repository provided by Johns Hopkins CSSE. Visualization by DataScience "),theme(legend.position = "bottom",text = element_text(color = "#22211d"),plot.background = element_rect(fill = "#ffffff", color = NA),panel.background = element_rect(fill = "#ffffff", color = NA),legend.background = element_rect(fill = "#ffffff", color = NA))
ggplot(),geom_polygon(data = world, aes(x=long, y = lat, group = group), fill="grey", alpha=0.3),geom_point(data=datacov, aes(x=Long, y=Lat, size=`3/3/20`, color=`3/3/20`), stroke=F, alpha=0.7),
scale_size_continuous(name="Cases", trans="log", range=c(1,7),breaks=mybreaks, labels = c("1-19", "20-99", "100-999", "1,000-49,999", "50,000+")),scale_alpha_continuous(name="Cases", trans="log", range=c(0.1, 0.9), breaks=mybreaks), scale_color_viridis_c(option="inferno",name="Cases", trans="log",breaks=mybreaks
> ggplot()+
+ geom_polygon(data = world, aes(x=long, y = lat, group = group), fill="grey", alpha=0.3) +
+ geom_point(data=datacov, aes(x=Long, y=Lat, size=`3/3/20`, color=`3/3/20`), stroke=F, alpha=0.7) +
+ scale_size_continuous(name="Cases", trans="log", range=c(1,7),breaks=mybreaks, labels = c("1-19", "20-99", "100-999", "1,000-49,999", "50,000+")) +
+ # scale_alpha_continuous(name="Cases", trans="log", range=c(0.1, 0.9), breaks=mybreaks) +
+ scale_color_viridis_c(option="inferno",name="Cases", trans="log",breaks=mybreaks,
datacovid_Jun7_global[datacovid_Jun7_global$`Country/Region`=="Argentina",68]
# Generación de mapa con infectados
library(readr)
#Generación de mapa con infectados
library(readr)
datacovid_Jun7_global <- read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv")
View(datacovid_Jun7_global)
paises <- summary(factor(datacovid_Jun7_global$`Country/Region`))
head(paises)
datacovid_Jun7_global[datacovid_Jun7_global$`Country/Region`=="Argentina",68]
#Generación de mapa con infectados
library(readr)
datacovid_Jun7_global <- read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv")
View(datacovid_Jun7_global)
paises <- summary(factor(datacovid_Jun7_global$`Country/Region`))
head(paises)
datacovid_Jun7_global[datacovid_Jun7_global$`Country/Region`=="Argentina",68]
